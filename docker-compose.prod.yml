version: '3'
services:
    web:
        build:
            context: ./backend
            dockerfile: Dockerfile.prod
        restart: always
        command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - c_static_data:/app/public/static
            - c_media_data:/app/public/media
            - c_model_data:/app/mlrec/models_data
        env_file:
            - ./.env
        expose:
            - 8000
        depends_on:
            - db
            - redis
    celery:
        build: .
        command: celery -A core worker -l INFO
        volumes:
            - c_model_data:/app/mlrec/models_data
        env_file:
            - ./.env
        depends_on:
            - web
            - redis
    nginx:
        image: nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - /etc/letsencrypt:/etc/letsencrypt
            - ./frontend/dist/frontend/kk:/app/frontend/dist/kk
            - ./frontend-admin/dist:/app/frontend-admin/dist
            - c_static_data:/app/public/static
            - c_media_data:/app/public/media
        depends_on:
            - web
    db:
        image: postgres:13-alpine
        restart: always
        volumes:
            - c_postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: database
    redis:
        restart: unless-stopped
        image: redis:alpine
        expose:
            - 6379

volumes:
    c_postgres_data:
    c_static_data:
    c_media_data:
    c_model_data:
